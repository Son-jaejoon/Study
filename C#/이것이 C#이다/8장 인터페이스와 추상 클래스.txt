1. 인터페이스 
- 메소드, 이벤트, 인덱서, 프로퍼티만을 가질 수 있다.
- 접근 제한 한정자 사용x, 모든 것이 public으로 선언
- 인스턴스 생성 x
- 인터페이스의 기본 구현 메소드는 업캐스팅했을 때만 사용할 수 있다.(엉뚱하게 호출할 가능성 x)

2. 추상 클래스
- abstract class MyClass{ }
- 추상 메소드도 abstract로 한다.
- 인터페이스보다 클래스에 가깝다.
- 인스턴스를 만들 수 없다.
- 구현을 갖지는 못하지만 자식 클래스에 반드시 구현하도록 강제한다.
- 기본 접근 한정자는 private, 선언가능
- 인스턴스화 하진말고 자식 클래스를 만들어 사용하고, 몇몇 메소드는 반드시 오버라이딩 하세요. 라는 말을 전달.
- public override void AbstractMethod()로 재정의 해야한다.

// 위 내용은 '이것이 C#이다'를 공부한 후 작성한 내용입니다.